blueprint:
  source_url: https://github.com/niro1987/homeassistant-config/blob/main/blueprints/automation/niro1987/zha_ikea_tradfri_5button_remote_color.yaml
  name: ZHA - IKEA TRADFRI - 5 Button Remote - Color Lights
  description: >-
    This automation simulates the use of the IKEA TRADFRI remote control
    connected through ZHA.
  domain: automation
  input:
    remote:
      name: IKEA TRADFRI remote control
      description: Select the remote control you wish to use.
      selector:
        device:
          multiple: false
          filter:
            - integration: zha
              manufacturer: IKEA of Sweden
              model: TRADFRI remote control
    light:
      name: Light
      description: Select the light entity you wish to control.
      selector:
        entity:
          multiple: false
          filter:
            - domain: light
    speed:
      name: Speed
      description: The speed in which to update the light when the button is held.
      selector:
        number:
          min: 100
          max: 1000
          step: 100
          unit_of_measurement: milliseconds
          mode: slider
      default: 500

mode: restart
max_exceeded: silent

variables:
  var_light: !input light
  var_speed: !input speed

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote

action:
  - choose:
      # Toggle the light on or off with a short press of the power button.
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "toggle" }}'
        sequence:
          - service: light.toggle
            target:
              entity_id: !input light

      # Set the light to maximum brightness with a long press of the power button.
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "move_to_level_with_on_off" }}'
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light
            data:
              brightness: 254
              hs_color:
                - 38.222
                - 52.941

      # Increase brightness with a short press of the dim-up button.
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "step_with_on_off" }}'
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light
            data:
              brightness_step_pct: 20
              transition: "{{ (var_speed / 1000)|float }}"

      # Gradually increase brightness with a long press of the dim-up button.
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "move_with_on_off" }}'
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    brightness_step_pct: 10
                    transition: "{{ (var_speed / 1000)|float }}"
                - delay:
                    milliseconds: !input speed

      # Decrease brightness with a short press of the dim-down button, ensuring brightness does not fall below 20%.
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "step" }}'
        sequence:
          - variables:
              current_brightness: "{{ state_attr(var_light, 'brightness') }}"
              min_brightness: 26  # 10% of 255
              # Calculate the new brightness to ensure it doesn't drop below 10%
              # We subtract 51 (20% step) from the current brightness, but not letting it go below 10% minimum
              new_brightness: "{{ [current_brightness|int - 51, min_brightness]|max }}"
          - condition: template
            value_template: "{{ current_brightness|int > min_brightness }}"
          - service: light.turn_on
            target:
              entity_id: !input light
            data:
              brightness: "{{ new_brightness }}"
              transition: "{{ (var_speed / 1000)|float }}"

              
      # Gradually decrease brightness with a long press of the dim-down button, stopping at 20% brightness.
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "move" }}'
        sequence:
          - repeat:
              while:
                - condition: template
                  value_template: "{{ state_attr(var_light, 'brightness')|default(0)|int > 26 }}" # Ensure above 20% of 255
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light
                  data_template:
                    brightness: >
                      {% set current = state_attr(var_light, 'brightness')|default(0)|int %}
                      {% set decrease = 255 * 0.1 | int %}
                      {% set new_brightness = [current - decrease, 51]|max %} # 20% of 255 is 51
                      {{ new_brightness }}
                - delay:
                    milliseconds: !input speed

      # Right Button Short Press - Make cooler by 15%
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "press" and trigger.event.data.args == [256,13,0] }}'
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light
            data_template:
              color_temp_kelvin: >-
                {{ [((state_attr(var_light, 'color_temp_kelvin')|int) * 0.85 + (state_attr(var_light, 'min_color_temp_kelvin')|int) * 0.15)|round, state_attr(var_light, 'min_color_temp_kelvin')|int, state_attr(var_light, 'max_color_temp_kelvin')|int]|sort|first }}
          - delay:
              milliseconds: !input speed

      # Right Button Long Press - Continuously make cooler by 10%
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "hold" and trigger.event.data.args == [3328,0] }}'
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light
                  data_template:
                    color_temp_kelvin: >-
                      {{ [((state_attr(var_light, 'color_temp_kelvin')|int) * 0.9 + (state_attr(var_light, 'min_color_temp_kelvin')|int) * 0.1)|round, state_attr(var_light, 'min_color_temp_kelvin')|int, state_attr(var_light, 'max_color_temp_kelvin')|int]|sort|first }}
                - delay:
                    milliseconds: !input speed

      # Left Button Short Press - Make warmer by 15%
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "press" and trigger.event.data.args == [257,13,0] }}'
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light
            data_template:
              color_temp_kelvin: >-
                {{ [((state_attr(var_light, 'color_temp_kelvin')|int) * 1.15 - (state_attr(var_light, 'max_color_temp_kelvin')|int) * 0.15)|round, state_attr(var_light, 'min_color_temp_kelvin')|int, state_attr(var_light, 'max_color_temp_kelvin')|int]|sort|last }}
          - delay:
              milliseconds: !input speed

      # Left Button Long Press - Continuously make warmer by 10%
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "hold" and trigger.event.data.args == [3329,0] }}'
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light
                  data_template:
                    color_temp_kelvin: >-
                      {{ [((state_attr(var_light, 'color_temp_kelvin')|int) * 1.1 - (state_attr(var_light, 'max_color_temp_kelvin')|int) * 0.1)|round, state_attr(var_light, 'min_color_temp_kelvin')|int, state_attr(var_light, 'max_color_temp_kelvin')|int]|sort|last }}
                - delay:
                    milliseconds: !input speed



    default: []
