blueprint:
  name: ZHA - IKEA TRADFRI - 5 Button Remote - Color Lights
  description: This automation simulates the use of the IKEA TRADFRI remote control connected through ZHA.
  domain: automation
  source_url: https://github.com/niro1987/homeassistant-config/blob/main/blueprints/automation/niro1987/zha_ikea_tradfri_5button_remote_color.yaml
  input:
    remote:
      name: IKEA TRADFRI remote control
      description: Select the remote control you wish to use.
      selector:
        device:
          integration: zha
          manufacturer: IKEA of Sweden
          model: TRADFRI remote control
    light:
      name: Light
      description: Select the light entity you wish to control.
      selector:
        entity:
          domain: light
    speed:
      name: Speed
      description: The speed in which to update the light when the button is held.
      selector:
        number:
          min: 100
          max: 1000
          step: 100
          unit_of_measurement: milliseconds
          mode: slider
      default: 500

mode: restart
max_exceeded: silent

variables:
  var_light: !input light
  var_speed: !input speed

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote

action:
  - choose:
      # Power Button Toggle
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "toggle" }}'
        sequence:
          - service: light.toggle
            target:
              entity_id: !input light

      # Dim-Up Button Short-Press
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "step_with_on_off" }}'
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light
            data:
              brightness_step_pct: 20

      # Dim-Down Button Short-Press
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "step" }}'
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light
            data:
              brightness_step_pct: -20

      # Right Button Short-Press (Change Color)
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "press" and trigger.event.data.args == [256,13,0] }}'
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light
            data_template:
              hs_color:
                - >-
                  {% set hue = state_attr(var_light, "hs_color")[0] + 18 %}
                  {% if hue > 360 %}
                    {{ hue - 360 }}
                  {% else %}
                    {{ hue }}
                  {% endif %}
                - '{{ state_attr(var_light, "hs_color")[1] }}'

      # Left Button Short-Press (Change Saturation)
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "press" and trigger.event.data.args == [257,13,0] }}'
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light
            data_template:
              hs_color:
                - '{{ state_attr(var_light, "hs_color")[0] }}'
                - >-
                  {% set saturation = state_attr(var_light, "hs_color")[1] - 20 %}
                  {% if saturation < 0 %}
                    {{ saturation + 100 }}
                  {% else %}
                    {{ saturation }}
                  {% endif %}

      # Long-Press Adjustments (Dim-Up, Dim-Down, Right, Left) are handled similarly with repeats and adjustments as needed

    default: []
